
//&НаСервере
//Процедура ПодборНаСервере()
//	// Вставить содержимое обработчика.
//	// Теперь нужно выбрать документ, по которому будем заполнять
//		ПараметрыФормы = Новый Структура;
//		Отбор = Новый Структура(" Проведен",  Истина);


//		Если ЗначениеЗаполнено(Объект.ТаможеннаяДекларация.Организация) Тогда
//			Отбор.Вставить("Организация", Объект.ТаможеннаяДекларация.Организация);
//		КонецЕсли;
//		ПараметрыФормы.Вставить("Отбор", Отбор);
//		ТабличнаяЧасть = объект.ДокументОснование.Выгрузить();
//		ДополнительныеПараметры = Новый Структура;
//		ДополнительныеПараметры.Вставить("ТабличнаяЧасть", ТабличнаяЧасть);
//		 СпособЗаполнения = "Заполнить";
//		ДополнительныеПараметры.Вставить("СпособЗаполнения", СпособЗаполнения);
//		
//		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ЗаполнитьТабличнуюЧастьПоРеализацииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
//		
//		ОткрытьФорму("Документ.РеализацияТоваровУслуг.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,, ОповещениеОЗакрытии);
//		

//КонецПроцедуры
&НаСервере
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ЗаполнитьОтбор()
Отбор = Новый Структура(" Проведен",  Истина);


		Если ЗначениеЗаполнено(Объект.ТаможеннаяДекларация.Организация) Тогда
			Отбор.Вставить("Организация", Объект.ТаможеннаяДекларация.Организация);
		КонецЕсли;

	возврат отбор;

КонецФункции // ЗаполнитьОтбор()
&НаСервере
 // <Возвращает табличную часть из обработки>
 // Возвращаемое значение:
 //   <ТабличнаяЧасть>   - табличная часть ДокументОснование обработки //
 Функция ЗаполнитьТЧ()
	 ТабличнаяЧасть = Объект.ДокументОснование.Выгрузить();

	 АдресХранилища = ПоместитьВоВременноеХранилище(ТабличнаяЧасть,ЭтотОбъект.УникальныйИдентификатор);
        
 	     //ДополнительныеПараметры.Вставить("ТабличнаяЧасть", );
возврат АдресХранилища;

 КонецФункции // ЗаполнитьТЧ()
 &НаСервере
Функция ПоместитьЗначенияВХралищие()
	
	Перем СтруктураПараметров;
	
	СтруктураПараметров = Новый Структура;
	ТЧ = Объект.ДокументОснование.Выгрузить();
	тч.Очистить();
	СтруктураПараметров.Вставить("ТабличнаяЧасть", ТЧ);
	
	Адрес = ПоместитьВоВременноеХранилище(СтруктураПараметров,Новый УникальныйИдентификатор);
	Возврат Адрес; 
	
КонецФункции 
 
&НаКлиенте
Процедура Подбор(Команда)
	ПараметрыФормы = Новый Структура;
	Отбор = заполнитьОтбор();
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ДополнительныеПараметры = Новый Структура;


	//АдресХранилища = ЗаполнитьТЧ();
	
//ТЗ = ПолучитьИзВременногоХранилища(АдресХранилища);
//ТЗ = новый ТаблицаЗначений;

	АдресПередаваемыхПараметров = ПоместитьЗначенияВХралищие();
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Адрес",АдресПередаваемыхПараметров);
	
	ОписаниеОповещение = Новый ОписаниеОповещения("ЗаполнитьРезультатОбработкиСервер", ЭтаФорма, СтруктураПараметров);
	
	ОткрытьФорму("ВнешняяОбработка.ЗаполнениеДокументовОснованийДляТаможенныхДеклараций.Форма.ФормаВыбора",СтруктураПараметров,ЭтаФорма,,,,ОписаниеОповещение);
	 

КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьТабличнуюЧастьПоРеализацииЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	ДокументРеализации = РезультатЗакрытия;
	
	Если НЕ ЗначениеЗаполнено(ДокументРеализации) Тогда
		Возврат; // ничего не выбрали.
	КонецЕсли;
	
	ТабличнаяЧасть   = ДополнительныеПараметры.ТабличнаяЧасть;
	СпособЗаполнения = ДополнительныеПараметры.СпособЗаполнения;
	
	//ЗаполнитьТабличнуюЧастьПоРеализацииПослеПолученияДокумента(ДокументРеализации, ТабличнаяЧасть, СпособЗаполнения);
		
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьРезультатОбработкиСервер(РезультатЗакрытия,Параметры) Экспорт
	
	 Если РезультатЗакрытия = Неопределено Тогда
		 Возврат;
	 КонецЕсли;
	 
	 СтруктураПараметров = ПолучитьИзВременногоХранилища(РезультатЗакрытия.Адрес);
	
	 Объект.ДокументОснование.Загрузить(СтруктураПараметров.ТабличнаяЧасть);
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиВДокументНаСервере()
	// Вставить содержимое обработчика.
	текДокумент = объект.ТаможеннаяДекларация.ПолучитьОбъект();
	Для каждого стрДок Из объект.ДокументОснование  Цикл
	     стр_=текДокумент.ДокументыОснования.Добавить();
		 стр_.ДокументОснование=стрДок.РеализацияТоваровИУслуг.ссылка;
	
	КонецЦикла; 
	текДокумент.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	ПеренестиВДокументНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);	
	ДиалогВыбора.Фильтр = "Все файлы (*.*)|*.*|Документ Excel (*.xls)|*.xls|(*.xlsx)|*.xlsx)";
	ДиалогВыбора.Заголовок = "Выберите файл, содержащий информацию в формате MS Excel";
	ДиалогВыбора.МножественныйВыбор = Ложь;
	ДиалогВыбора.ПредварительныйПросмотр = Ложь;
	ДиалогВыбора.ПроверятьСуществованиеФайла = Ложь;
	
	Если ДиалогВыбора.Выбрать() Тогда
		объект.Файл=ДиалогВыбора.ПолноеИмяФайла;
		объект.ИмяФайла = СтрЗаменить(объект.Файл, ДиалогВыбора.Каталог,"");
		объект.ИмяФайла = СтрЗаменить(объект.ИмяФайла, ДиалогВыбора.Расширение,"");
		//если Объект.ВариантСФ=0 тогда
			ФайлПриИзменении() ;
		//иначе
		//	ФайлПриИзменении2() ;
		//конецесли;	

	Иначе
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Вставить содержимое обработчика
	
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Очистить();
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Добавить("10", "10 - Морской/речной транспорт");
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Добавить("20", "20 - Железнодорожный транспорт");
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Добавить("30", "30 - Автодорожный транспорт, за исключением транспортных средств, указанных под кодами 31, 32");
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Добавить("31", "31 - Состав транспортных средств (тягач с полуприцепом или прицепом)");
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Добавить("32", "32 - Состав транспортных средств (тягач с прицепом (-ами) и полуприцепом (-ами) )");
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Добавить("40", "40 - Воздушный транспорт");
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Добавить("50", "50 - Почтовое отправление");
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Добавить("71", "71 - Трубопроводный транспорт");
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Добавить("72", "72 - Линии электропередачи");
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Добавить("80", "80 - Внутренний водный транспорт");
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Добавить("90", "90 - Транспортное средство, перемещающееся в качестве товара своим ходом");
	//ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.Добавить("99", "99 - Прочие");
	// //ЭтаФорма.Элементы.CRM_ТЧКодТС.СписокВыбора.ЗагрузитьЗначения(СписокТС);
	// //
	//ЭтаФорма.Элементы.CRM_ТЧВидДокумента.СписокВыбора.Очистить();
	//ЭтаФорма.Элементы.CRM_ТЧВидДокумента.СписокВыбора.Добавить("01", "01 - CMR");
	//ЭтаФорма.Элементы.CRM_ТЧВидДокумента.СписокВыбора.Добавить("02", "02 - Коносамент");
	//ЭтаФорма.Элементы.CRM_ТЧВидДокумента.СписокВыбора.Добавить("03", "03 - Ж/д накладная");
	//ЭтаФорма.Элементы.CRM_ТЧВидДокумента.СписокВыбора.Добавить("04", "04 - Авианакладная");
	//ЭтаФорма.Элементы.CRM_ТЧВидДокумента.СписокВыбора.Добавить("05", "05 - Книжка МДП");
	//ЭтаФорма.Элементы.CRM_ТЧВидДокумента.СписокВыбора.Добавить("06", "06 - Поручение на отгрузку");
	//ЭтаФорма.Элементы.CRM_ТЧВидДокумента.СписокВыбора.Добавить("07", "07 - Морская накладная");
	//ЭтаФорма.Элементы.CRM_ТЧВидДокумента.СписокВыбора.Добавить("12", "12 - Иной документ");
	//ЭтаФорма.Элементы.CRM_ТЧВидДокумента.СписокВыбора.ЗагрузитьЗначения(СписокДок);
	ВосстановитьНастройки();

	//
КонецПроцедуры

Функция ОпределениеМесяца(Строка)
	Если СтрНайти(Строка, "янв") тогда
		Рез = "01";
	ИначеЕсли СтрНайти(Строка, "февр") тогда
		Рез = "02";
	ИначеЕсли СтрНайти(Строка, "март") тогда
		Рез = "03";
	ИначеЕсли СтрНайти(Строка, "апре") тогда
		Рез = "04";
	ИначеЕсли СтрНайти(Строка, "мая") тогда
		Рез = "05";
	ИначеЕсли СтрНайти(Строка, "июн") тогда
		Рез = "06";
	ИначеЕсли СтрНайти(Строка, "июл") тогда
		Рез = "07";
	ИначеЕсли СтрНайти(Строка, "авг") тогда
		Рез = "08";
	ИначеЕсли СтрНайти(Строка, "сент") тогда
		Рез = "09";
	ИначеЕсли СтрНайти(Строка, "окт") тогда
		Рез = "10";
	ИначеЕсли СтрНайти(Строка, "ноябр") тогда
		Рез = "11";
	ИначеЕсли СтрНайти(Строка, "декабр") тогда
		Рез = "12";
	КонецЕсли;
	Возврат Рез;
КонецФункции

&НаСервере
Процедура ПрочитатьИзФайлаНаСервере()
	
	ТабличныйДокумент = Новый ТабличныйДокумент;	
	ТабличныйДокумент.Прочитать(Объект.Файл, СпособЧтенияЗначенийТабличногоДокумента.Значение);	
	//ТабличныйДокумент.Показать();
	ПЗ = Новый ПостроительЗапроса;   	
	ПЗ.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТабличныйДокумент.Область());  	
	ПЗ.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять; 	
	ПЗ.ЗаполнитьНастройки(); 	
	ПЗ.Выполнить();
	Объект.Товары.Очистить();
	ТаблицаЗначений = ПЗ.Результат.Выгрузить();
	НомераМассив = СтрРазделить(ТаблицаЗначений[0].Приложение_1КПостановлениюПравительстваРоссийскойФедерацииОт26Декабря2011Г__1137__вРедакцииПостановленияПравительстваРоссийскойФедерацииОт19Августа2017Г__981_, " ");
	//СтрДата = НомераМассив[6]+"."+ОпределениеМесяца(НомераМассив[5]) + "." + НомераМассив[4];
	//Дата = Дата(СтрДата);
	//Объект.Дата = Дата;
	Вал = СтрРазделить(ТаблицаЗначений[11].Приложение_1КПостановлениюПравительстваРоссийскойФедерацииОт26Декабря2011Г__1137__вРедакцииПостановленияПравительстваРоссийскойФедерацииОт19Августа2017Г__981_, " ");
	Валют = Справочники.Валюты.НайтиПоКоду(Вал[Вал.Количество() - 1]);
	Объект.Валюта = Валют;
	Номер = НомераМассив[2];
	Объект.Номер = Номер;
	////Объект.Номер = Номер;
	//стрТЧ= Объект.CRM_ТЧ.Добавить();
	ИННОргМассив1 = СтрРазделить(ТаблицаЗначений[4].Приложение_1КПостановлениюПравительстваРоссийскойФедерацииОт26Декабря2011Г__1137__вРедакцииПостановленияПравительстваРоссийскойФедерацииОт19Августа2017Г__981_, ": ");
	ИННОргМассив2 = СтрРазделить(ИННОргМассив1[3], "/");
	ИННОрг = ИННОргМассив2[0]; 
	ИННКонтрагентаМассив1 = СтрРазделить(ТаблицаЗначений[10].Приложение_1КПостановлениюПравительстваРоссийскойФедерацииОт26Декабря2011Г__1137__вРедакцииПостановленияПравительстваРоссийскойФедерацииОт19Августа2017Г__981_, ": ");
	ИННКонтрагентаМассив2 = СтрРазделить(ИННКонтрагентаМассив1[3], "/");
	ИННКонтрагента = ИННКонтрагентаМассив2[0];
	
	РезультатПоискаКонтрагента = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", ИННКонтрагента);
	РезультатПоискаОрг = Справочники.Организации.НайтиПоРеквизиту("ИНН", ИННОрг); 
	
	Если НЕ ЗначениеЗаполнено(РезультатПоискаКонтрагента) тогда
		Структура = Новый Структура;
		КППКонтрагента = ИННКонтрагентаМассив2[ИННКонтрагентаМассив2.Количество() - 1];
		НаименованиеКонтрагентаМассив = СтрРазделить(ТаблицаЗначений[8].Приложение_1КПостановлениюПравительстваРоссийскойФедерацииОт26Декабря2011Г__1137__вРедакцииПостановленияПравительстваРоссийскойФедерацииОт19Августа2017Г__981_, ":");
		Структура.Вставить("НаименованиеПолное", НаименованиеКонтрагентаМассив[НаименованиеКонтрагентаМассив.Количество() - 1]);
		Структура.Вставить("ИНН",ИННКонтрагента);
		Структура.Вставить("КПП",КППКонтрагента);
		Справочники.Контрагенты.СоздатьКонтрагента(Структура);
		Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", ИННКонтрагента);
	Иначе
		Контрагент = РезультатПоискаКонтрагента;
	КонецЕсли;
	Объект.Контрагент = Контрагент; 
	Объект.Организация = ?(ЗначениеЗаполнено(РезультатПоискаОрг), РезультатПоискаОрг, "");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;	
	ТабличныйДокумент.Прочитать(Объект.Файл, СпособЧтенияЗначенийТабличногоДокумента.Текст);	
	//ТабличныйДокумент.НомерПервойСтроки = Объект.НомерПервойСтроки;
	//ТабличныйДокумент.НомерПервойКолонки = 1;
	//ТабличныйДокумент.НомерПоследнейСтроки = Объект.НомерПоследнейСтроки;
	//ТабличныйДокумент.НомерПоследнейКолонки = 28;
	Построитель = Новый ПостроительОтчета;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТабличныйДокумент.Область(Объект.НомерПервойСтроки, 2, Объект.НомерПоследнейСтроки, 30));
	Построитель.Выполнить();
	ТЗ = Построитель.Результат.Выгрузить();
	Сч = 0;
	Для Каждого стр Из ТЗ Цикл
		Если Сч >= 2 Тогда
			стрТч = Объект.Товары.Добавить();
			ПоискНоменклатуры = Справочники.Номенклатура.НайтиПоНаименованию(стр.НаименованиеТовара_описаниеВыполненныхРабот_ОказанныхУслуг__ИмущественногоПрава, Истина);
			стрТч.Номенклатура = ?(ЗначениеЗаполнено(ПоискНоменклатуры), ПоискНоменклатуры, "");
			стрТч.Количество = Число(СтрЗаменить(стр.Коли__чество__объем_, " ", ""));
			стрТч.Цена = Число(СтрЗаменить(стр.Цена_тариф_ЗаЕдиницуИзмерения, " ", ""));
			стрТч.НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СтрЗаменить(стр.РегистрационныйНомер_таможенной_декларации," ",""));	
			стрТч.СуммаНДС = Число(СтрЗаменить(стр.СуммаНалога_ПредъявляемаяПокупателю, " ", ""));
			стрТч.СуммаБезНДС = Число(СтрЗаменить(стр.СтоимостьТоваров_работ_Услуг__ИмущественныхПравБезНалога_Всего, " ", ""));
			стрТч.СуммаСНДС = Число(СтрЗаменить(стр.СтоимостьТоваров_работ_Услуг__ИмущественныхПравСНалогом_Всего, " ", ""));
		КонецЕсли;
		Сч = Сч + 1;
	КонецЦикла;
	//Для каждого стрТЗ  из ТаблицаЗначений Цикл
		//ТипДок = стрТЗ[3];
		//если ТипДок="3" тогда 
		
		//стрТЧ.CRM_ТЧНомерДока = 
		//стрТЧ.КодТС="31";
		//стрТЧ.ВидДокумента="01";
		//стрТЧ.НомерТСД=стрТЗ[6];
		//стрТЧ.ДатаТСД=дата(число(Прав(стрТЗ[7],4)),число(сред(стрТЗ[7],4,2)),число(ЛЕВ(стрТЗ[7],2)));
		//конецесли;

	//КонецЦикла; 
	//Сообщить("Все");

КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьИзФайла(Команда)
	ПрочитатьИзФайлаНаСервере();
КонецПроцедуры


&НаСервере
Функция СоздатьНоменклатуру(нОМЕНКЛАТУРАСтр,АртикулСтр)
	НоваяНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
	НоваяНоменклатура.Наименование = нОМЕНКЛАТУРАСтр;
	//Если Не КодТовара = "--" ИЛИ НЕ КодТовара = "-" ИЛИ НЕ КодТовара = "" Тогда
	//	НоваяНоменклатура.Код = КодТовара;
	//КонецЕсли;
	НоваяНоменклатура.ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товары");
	//НоваяНоменклатура.ЕдиницаИзмерения=едизм;
	НоваяНоменклатура.Артикул=АртикулСтр;

	НоваяНоменклатура.Записать();
	Возврат НоваяНоменклатура.Ссылка;
КонецФункции
&НаСервере
Функция СоздатьНомерГТД(ГТДСтр)
	
	ГТДНомер = Справочники.НомераГТД.СоздатьЭлемент();
	ГТДНомер.Код = ГТДСтр;
	ГТДНомер.Записать();
	Возврат ГТДНомер.ссылка;
КонецФункции

&НаСервере
Процедура ЗаписатьВдокументНаСервере()
	// Вставить содержимое обработчика.
	если ЗначениеЗаполнено(объект.РТУ) тогда
		текдокумент = объект.рту.ПолучитьОбъект();
		текдокумент.Товары.Очистить();
	иначе
		текДокумент = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();

	конецесли;
			текдокумент.СчетУчетаРасчетовСКонтрагентом =  ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.01");
		текдокумент.СчетУчетаРасчетовПоАвансам =  ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.02");

	текДокумент.Организация = Объект.Организация;
	текДокумент.Контрагент = Объект.Контрагент;
	текДокумент.ДоговорКонтрагента = Объект.Договор;

	текДокумент.Номер = Объект.Номер;
	текДокумент.Дата = Объект.Дата;
	текДокумент.ВалютаДокумента = Объект.Валюта;
	текДокумент.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия;
	
	Для Каждого стр ИЗ Объект.Товары Цикл
		стрТч = текДокумент.Товары.Добавить();
		//СтруктураПоиска=НайтиВсе(стр.НоменклатураСтр,Стр.ЕдиницаИзмерения.Код, стр.СтранаПроисхождения.Наименование, "");
		//Если Не ЗначениеЗаполнено(СтруктураПоиска.Номенклатура) тогда
		//	номенклатура = СоздатьНоменклатуру(стр.НоменклатураСтр);
		//    стр.Номенклатура = номенклатура.Ссылка;
		//КонецЕсли;
		стрТЧ.Номенклатура = стр.Номенклатура;
		//стрТЧ.ЕдиницаИзмерения = стр.ЕдиницаИзмерения;
		стрТч.Количество = стр.Количество;
		стрТч.Цена = стр.Цена;
		стрТч.СтавкаНДС = стр.ставкандс;
		стрТЧ.СчетУчета = ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.01");
		//стрТЧ.СчетДоходов = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.1");
		//стрТЧ.СчетРасходов = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.02.1");
		//стрТЧ.субконто = стр.номенклатура.номенклатурнаягруппа;
		стрТЧ.СчетУчетаНДС = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.03");
		
		стрТч.НомерГТД = стр.НомерГТД;
		//СтрТч.СуммаНДС = стр.СуммаНДС;
		стрТч.Сумма = стр.сумма;
		//стрТч.КодТНВЭД = стр.Номенклатура.КодТНВЭД;
		//стрТч.Субконто = стр.Номенклатура.НоменклатурнаяГруппа;
		стрТч.СтранаПроисхождения = стр.СтранаПроисхождения;

	КонецЦикла;
	//если не ЗначениеЗаполнено(текДокумент.НомерВходящегоДокумента) тогда

	текДокумент.Записать();
	объект.РТУ=текдокумент.Ссылка;

КонецПроцедуры
&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	//Вставить содержимое обработчика
	СохранитьНастройки();

КонецПроцедуры


&НаКлиенте
Процедура ЗаписатьВдокумент(Команда)
	ЗаписатьВдокументНаСервере();
КонецПроцедуры
#Область СохранениеДанныхФормы
&НаСервере
Процедура ВосстановитьНастройки()
КлючОбъекта = "ЗагрузкаТТУ.ru";
КлючНастроек = "ЗагрузкаТТУН.ru";
ОписаниеНастроек = "ЗагрузкаТТУО.ru";
ИмяПользователя = ПараметрыСеанса.АвторизованныйПользователь;

ЗначениеНастроек = ХранилищеОбщихНастроек.Загрузить(КлючОбъекта, КлючНастроек, ОписаниеНастроек, ИмяПользователя);

Если ТипЗнч(ЗначениеНастроек) = Тип("Соответствие") Тогда
	Объект.Файл = ЗначениеНастроек.Получить("Файл");
	объект.Дата = ЗначениеНастроек.Получить("Дата");
	объект.Организация = ЗначениеНастроек.Получить("Организация");
	объект.Контрагент = ЗначениеНастроек.Получить("Контрагент");
	объект.Договор = ЗначениеНастроек.Получить("Договор");
	объект.РТУ = ЗначениеНастроек.Получить("РТУ");

	объект.Номер = ЗначениеНастроек.Получить("Номер");
	объект.Валюта = ЗначениеНастроек.Получить("Валюта");
	объект.ВариантСФ = ЗначениеНастроек.Получить("ВариантСФ");
	объект.НомерПервойСтроки = ЗначениеНастроек.Получить("НомерПервойСтроки");
	объект.НомерПоследнейСтроки = ЗначениеНастроек.Получить("НомерПоследнейСтроки");

КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура СохранитьНастройки()  
КлючОбъекта = "ЗагрузкаТТУ.ru";
КлючНастроек = "ЗагрузкаТТУН.ru";
ОписаниеНастроек = "ЗагрузкаТТУО.ru";

	ИмяПользователя = ПараметрыСеанса.АвторизованныйПользователь;
	
	
	Настройки = Новый Соответствие;
	Настройки.Вставить("Файл", объект.Файл);
	Настройки.Вставить("Дата", Объект.Дата);
	Настройки.Вставить("Организация", Объект.Организация);
	Настройки.Вставить("Контрагент", Объект.Контрагент);
	Настройки.Вставить("Договор", Объект.Договор);
	Настройки.Вставить("РТУ", Объект.РТУ);
	Настройки.Вставить("ВариантСФ", Объект.ВариантСФ);
	Настройки.Вставить("Номер", Объект.Номер);
	Настройки.Вставить("Валюта", Объект.Валюта);
	Настройки.Вставить("НомерПервойСтроки", Объект.НомерПервойСтроки);
	
		Настройки.Вставить("НомерПоследнейСтроки", Объект.НомерПоследнейСтроки);


	ХранилищеОбщихНастроек.Сохранить(КлючОбъекта, КлючНастроек, Настройки, ОписаниеНастроек, ИмяПользователя);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаИзЭкселя(Команда)
	если объект.НомерПервойСтроки = 0 или объект.НомерПоследнейСтроки= 0 тогда
		сообщить("Проверьте номера строк");
		возврат;
	конецесли;	
		Попытка
		Excel = Новый COMОбъект("Excel.Application");
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат ;
	КонецПопытки;
	
	Попытка
		Книга = Excel.WorkBooks.Open(Объект.Файл);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат ;
	КонецПопытки;   	
   	Лист1 = Книга.Sheets(1);	
//
	НачальнаяСтрока1=объект.НомерПервойСтроки;//10;
	КонечнаяСтрока1=объект.НомерПоследнейСтроки;//4313;
	стр=НачальнаяСтрока1-1;
	объект.Товары.Очистить();
			//
	нос =1;
	стр = НачальнаяСтрока1-1;
	Пока Истина  Цикл 
				
		стр=стр+1;
		если стр> КонечнаяСтрока1 тогда
			прервать;
		конецесли;	
			нОМЕНКЛАТУРАСтр=СокрЛП(Лист1.Cells(Стр, объект.НоменклатураСтр).Text);
			Если ЗначениеЗаполнено(объект.АртикулСтр) Тогда
				АртикулСтр=СокрЛП(Лист1.Cells(Стр, Объект.АртикулСтр).Text);
			КонецЕсли;
			нОМЕНКЛАТУРАСтр =СтрЗаменить(нОМЕНКЛАТУРАСтр,Символы.ПС,"");
			//КодТовара = СокрЛП(Лист1.Cells(Стр, ?(объект.вариантсф=0,3,4)).Text)
			//ЕдИзм = Лист1.Cells(Стр, 8).Text;
			//Если ОпределениеТипаОперации() =1 тогда //Объект.ТипОперации=Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников тогда
			
			Количество= Лист1.Cells(Стр,объект.КоличествоСтр).Value;
			
			Цена= Лист1.Cells(Стр, объект.ЦенаСтр).Value;
			Стоимость= Лист1.Cells(Стр, объект.СтоимостьСтр).Value;
				//ндсстр= Лист1.Cells(Стр, ?(объект.вариантсф=0,19,30)).Text;
			//иначеесли ОпределениеТипаОперации() =2 тогда //Объект.ТипОперации=Перечисления.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств тогда
				//СуммаНДС= Лист1.Cells(Стр, ?(объект.вариантсф=0,22,33)).Value;
				//СуммаСНДС= Лист1.Cells(Стр, ?(объект.вариантсф=0,24,36)).Value;
				//КодСтраны= Лист1.Cells(Стр, ?(объект.вариантсф=0,26,40)).Value;
			СтранаСписок = СтрРазделить(Лист1.Cells(Стр, объект.СтранаСтр).Value, "/");
			СтранаСтр = СтрЗаменить(СтранаСписок[СтранаСписок.Количество() - 1], Символы.ПС, "");
				//КодСтраны = Справочники.СтраныМира.НайтиПоНаименованию(СтранаСтр);
				//ГТДСтр= Лист1.Cells(Стр, ?(объект.вариантсф=0,28,43)).Value;
				ГТДстр = "";
			//иначе
			//	прервать;
			//конецесли;	
			СтруктураПоиска=найтиВсе(нОМЕНКЛАТУРАСтр,АртикулСтр,СтранаСтр,ГТДСтр);
			//
			текстрока = объект.Товары.Добавить();
			текстрока.Номенклатура= СтруктураПоиска.Номенклатура;
			//текстрока.ЕдиницаИзмерения =  СтруктураПоиска.Едизм;
			текстрока.СтранаПроисхождения =  СтруктураПоиска.Страна;
			//текстрока.НомерГТД =  СтруктураПоиска.ГТД;
			//текстрока.НомерГТД =  СтруктураПоиска.ГТД;

			текстрока.Цена =  Стоимость / Количество; 
			текстрока.Сумма = Стоимость;
			текстрока.Количество = Количество;
			текстрока.НоменклатураСтр = нОМЕНКЛАТУРАСтр;
			//текстрока.СуммаНДС = СуммаНДС;
			текстрока.СтавкаНДС = ОпределениеСтавки("БезНДС");
			текстрока.СчетДоходов =  ОпределениеСчетДоходов();
			текстрока.счетУчета =  ОпределениеСчетаУчета();

конеццикла;	  
  Excel.Application.Quit();



КонецПроцедуры

&НаСервере
Функция НайтиВсе(нОМЕНКЛАТУРАСтр,АртикулСтр, СтранаСтр, ГТДСтр)
	структураПоиска = новый Структура;
	структураПоиска.Вставить("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	//структураПоиска.Вставить("Едизм", Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка());
	структураПоиска.Вставить("Страна",справочники.СтраныМира.ПустаяСсылка());
	структураПоиска.Вставить("ГТД",справочники.НомераГТД.ПустаяСсылка());
//
	//структураПоиска.Едизм = Справочники.КлассификаторЕдиницИзмерения.НайтиПонаименованию(КодЕдИзм);
	структураПоиска.Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию(нОМЕНКЛАТУРАСтр);
	если не значениезаполнено( структураПоиска.Номенклатура) тогда
		Если значениезаполнено(артикулстр) Тогда
		   структураПоиска.Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",АртикулСтр);
		КонецЕсли; 
		если не значениезаполнено( структураПоиска.Номенклатура) тогда
			текноменклатура = СоздатьНоменклатуру(нОМЕНКЛАТУРАСтр,АртикулСтр) ;
			структураПоиска.Номенклатура =   текноменклатура;
			сообщить("Создана номенклатура "+  нОМЕНКЛАТУРАСтр);
		конецесли;	
	конецесли;	
	структураПоиска.ГТД = Справочники.НомераГТД.НайтиПоКоду(сокрлп(ГТДСтр));
	если не значениезаполнено( структураПоиска.ГТД) тогда
		 структураПоиска.ГТД = СоздатьНомерГТД(ГТДСтр) ;

		сообщить("Создана ГТД "+  ГТДСтр);
	конецесли;	

	структураПоиска.Страна = Справочники.СтраныМира.НайтиПонаименованию(СтранаСтр);
//
	возврат структураПоиска;

конецфункции
&НаСервере
Функция ОпределениеСтавки(ндсстр)
	если найти(ндсстр,"20") тогда 
		возврат Перечисления.СтавкиНДС.НДС20;
	иначеесли найти(ндсстр,"10") тогда 
		возврат Перечисления.СтавкиНДС.НДС10;	
		иначеесли найти(ндсстр,"0") тогда 
		возврат Перечисления.СтавкиНДС.НДС0;	
		иначе 
		возврат Перечисления.СтавкиНДС.БезНДС;
	конецесли;
конецфункции
&НаСервере
Функция ОпределениеСчетаУчета()
	возврат ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
конецфункции
&НаСервере
Функция ОпределениеСчетДоходов()
	возврат ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
конецфункции
&НаСервере
Функция найтиКонтрагент(контрагентСтр)
	возврат Справочники.Контрагенты.НайтиПоНаименованию(контрагентстр);
конецфункции
&НаСервере
Функция найтиВалюту(ВалютаСтр)
	возврат Справочники.Валюты.НайтиПокоду(ВалютаСтр);
конецфункции
&НаСервере
Функция найтиРеализацию()
	возврат документы.РеализацияТоваровУслуг.НайтиПоНомеру(объект.номер,объект.Дата);
конецфункции

&НаКлиенте
Процедура ФайлПриИзменении()
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат ;
	КонецПопытки;
	
	Попытка
		Книга = Excel.WorkBooks.Open(Объект.Файл);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат ;
	КонецПопытки;   	
   	Лист1 = Книга.Sheets(1);	
//
	НачальнаяСтрока1=1;//10;
	КонечнаяСтрока1=500;//4313;
	стр=НачальнаяСтрока1-1;
	объект.Товары.Очистить();
			//
	нос =1;
	стр = НачальнаяСтрока1-1;
	НомерПервойСтроки = 0;
	ФлагЦикла = Истина;
	Пока Истина  Цикл 
				
		стр=стр+1;
		если стр> КонечнаяСтрока1 тогда
			прервать;
		конецесли;	
		ЗаголовокСтр =  СокрЛП(Лист1.Cells(Стр, 1).Text);
		если найти(ЗаголовокСтр, "Спецификация")<>0 Тогда
			н1 = найти(заголовокСтр,"№");
			н2 = найти(заголовокСтр,"от");
			объект.Номер = сокрлп(сред(ЗаголовокСтр,н1+1,н2-н1-1));
			// дата
			ЧислоСтр = СтрРазделить(ЗаголовокСтр, "от");
			ДатаЧислоСтр = СтрРазделить(СокрЛП(ЧислоСтр[2])," ");
			датаЧисло =  ДатаЧислоСтр[0];
			н1 = н2+4;               
			если найти(заголовокСтр,"Января")>0 тогда
				 датаМесяц = "01";
			иначеесли найти(заголовокСтр,"Февраля")>0 тогда
				 датаМесяц = "02";
			иначеесли найти(заголовокСтр,"Марта")>0 тогда
				 датаМесяц = "03";
			иначеесли найти(заголовокСтр,"Апреля")>0 тогда
				 датаМесяц = "04";
			иначеесли найти(заголовокСтр,"Мая")>0 тогда
				 датаМесяц = "05";
			иначеесли найти(заголовокСтр,"Июня")>0 тогда
				 датаМесяц = "06";
			иначеесли найти(заголовокСтр,"Июля")>0 тогда
				 датаМесяц = "07";
			иначеесли найти(заголовокСтр,"Августа")>0 тогда
				 датаМесяц = "08";
			иначеесли найти(заголовокСтр,"Сентября")>0 тогда
				 датаМесяц = "09";
			иначеесли найти(заголовокСтр,"Октября")>0 тогда
				 датаМесяц = "10";
			иначеесли найти(заголовокСтр,"Ноября")>0 тогда
				 датаМесяц = "11";
			иначеесли найти(заголовокСтр,"Декабря")>0 тогда
				 датаМесяц = "12";
			 иначе
				 датамесяц="12";
			 конецесли;
			 годстр = прав(заголовокстр,4);
			 //годстр = СтрЗаменить(годстр,"г."," ");
			 годстр=сокрлп(годстр);
			 датаСТР=годстр+датаМесяц+?(СтрДлина(датаЧисло)>1, датаЧисло, "0" + датаЧисло)+"000000";
			 объект.Дата = дата(датаСТР);	
		 Иначе
			 Для Счетчик = 1 По 20 Цикл
			 	ЗаголовокТЧ = СокрЛП(Лист1.Cells(Стр, Счетчик).Text); 
				Если Найти(ЗаголовокТЧ, "Цена за")<>0 Тогда
					ВалютаСтр = СтрРазделить(ЗаголовокТЧ, " ");
	    	 		объект.Валюта = найтиВалюту(ВалютаСтр[2]);
					НомерПервойСтроки = Стр + 1;
					объект.ЦенаСтр = Счетчик;
					//Прервать;
				ИначеЕсли Найти(ЗаголовокТЧ, "Стоимость,")<>0 Тогда
					объект.СтоимостьСтр = Счетчик;
				ИначеЕсли Найти(ЗаголовокТЧ, "Страна")<>0 Тогда
					объект.СтранаСтр = Счетчик;
				ИначеЕсли Найти(ЗаголовокТЧ, "Артикул")<>0 Тогда
					объект.АртикулСтр = Счетчик;
				ИначеЕсли Найти(ЗаголовокТЧ, "Товар")<>0 ИЛИ Найти(ЗаголовокТЧ, "Наименование")<>0 Тогда
					объект.НоменклатураСтр = Счетчик;
				ИначеЕсли Найти(ЗаголовокТЧ, "Кол-во")<>0 Тогда
					объект.КоличествоСтр = Счетчик;
				КонецЕсли;
			 КонецЦикла;
		КонецЕсли;	
			
						
	 //   иначеесли стр=10 тогда // контрагент
	 //
	 //   	 //
	 //   	 контрагентСтр =  СокрЛП(Лист1.Cells(Стр, 2).Text);
	 //        контрагентстр = СтрЗаменить(контрагентСтр,"Покупатель:","");
	 //   	 объект.Контрагент = найтиКонтрагент(контрагентСтр);
	 //   	 если не ЗначениеЗаполнено(объект.Контрагент) тогда
	 //   		 Сообщить("Не найден контрагент "+контрагентстр);
	 //   	 конецесли;	 
	   Для Счетчик = 1 По 15 Цикл
			Всегокоплате =  СокрЛП(Лист1.Cells(Стр, Счетчик).Text);
            если найти(Всегокоплате,"Стоимость доставки")>0 ИЛИ найти(Всегокоплате, "Итог") тогда
			   объект.НомерПоследнейСтроки= стр-1;
			   ФлагЦикла = Ложь;
			   прервать;
		   конецесли;  
	   КонецЦикла;
	   Если ФлагЦикла = Ложь Тогда
		   Прервать;
	   КонецЕсли;
конеццикла;
объект.НомерПервойСтроки= НомерПервойСтроки;
объект.РТУ=найтиреализацию();
 Excel.Application.Quit();

КонецПроцедуры
//
&НаКлиенте
Процедура ФайлПриИзменении2()
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат ;
	КонецПопытки;
	
	Попытка
		Книга = Excel.WorkBooks.Open(Объект.Файл);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат ;
	КонецПопытки;   	
   	Лист1 = Книга.Sheets(1);	
//
	НачальнаяСтрока1=1;//10;
	КонечнаяСтрока1=500;//4313;
	стр=НачальнаяСтрока1-1;
	объект.Товары.Очистить();
			//
	нос =1;
	стр = НачальнаяСтрока1-1;
	Пока Истина  Цикл 
				
		стр=стр+1;
		если стр> КонечнаяСтрока1 тогда
			прервать;
		конецесли;	
		если стр=2 тогда
			объект.Номер =  СокрЛП(Лист1.Cells(Стр, 5).Text);
			//
			ЗаголовокСтр=  СокрЛП(Лист1.Cells(Стр, 19).Text);
			// дата
			датаЧисло =  прав("0"+сокрлп(сред(ЗаголовокСтр,1,2)),2);

			если найти(заголовокСтр,"января")>0 тогда
				 датаМесяц = "01";
			иначеесли найти(заголовокСтр,"февраля")>0 тогда
				 датаМесяц = "02";
			иначеесли найти(заголовокСтр,"марта")>0 тогда
				 датаМесяц = "03";
			иначеесли найти(заголовокСтр,"апреля")>0 тогда
				 датаМесяц = "04";
			иначеесли найти(заголовокСтр,"мая")>0 тогда
				 датаМесяц = "05";
			иначеесли найти(заголовокСтр,"июня")>0 тогда
				 датаМесяц = "06";
			иначеесли найти(заголовокСтр,"июля")>0 тогда
				 датаМесяц = "07";
			иначеесли найти(заголовокСтр,"августа")>0 тогда
				 датаМесяц = "08";
			иначеесли найти(заголовокСтр,"сентября")>0 тогда
				 датаМесяц = "09";
			иначеесли найти(заголовокСтр,"октября")>0 тогда
				 датаМесяц = "10";
			иначеесли найти(заголовокСтр,"ноября")>0 тогда
				 датаМесяц = "11";
			иначеесли найти(заголовокСтр,"декабря")>0 тогда
				 датаМесяц = "12";
			 иначе
				 датамесяц="12";
			 конецесли;
			 годстр = прав(заголовокстр,8);
			 годстр = СтрЗаменить(годстр,"г."," ");
			 годстр=сокрлп(годстр);
			 датаСТР=годстр+датаМесяц+датаЧисло+"000000";
			 объект.Дата = дата(датаСТР);
		иначеесли стр=4 тогда // контрагент
	 
			 //
			 контрагентСтр =  СокрЛП(Лист1.Cells(Стр, 35).Text);
			 объект.Контрагент = найтиКонтрагент(контрагентСтр);
			 если не ЗначениеЗаполнено(объект.Контрагент) тогда
				 Сообщить("Не найден контрагент "+контрагентстр);
			 конецесли;	 
		иначеесли стр=7 тогда // контрагент
	 
			 //
			ВалютаСтр =  СокрЛП(Лист1.Cells(Стр, 35).Text);
             ВалютаСтр = прав(ВалютаСтр,3);
			 объект.Валюта = найтиВалюту(ВалютаСтр);
		 иначе 
			Всегокоплате =  СокрЛП(Лист1.Cells(Стр, 2).Text);
            если найти(Всегокоплате,"Всего к оплате")>0 тогда
			   объект.НомерПоследнейСтроки= стр-1;
			   прервать;
			конецесли;   
	конецесли;
конеццикла;
объект.НомерПервойСтроки= 15;
объект.РТУ=найтиреализацию();

 Excel.Application.Quit();

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьтПолеРТУ(Команда)
	// Вставить содержимое обработчика.
	объект.РТУ=получитьпустоеполе();
КонецПроцедуры
&НаСервере
Функция получитьпустоеполе()
	// Вставить содержимое обработчика.
	возврат документы.РеализацияТоваровУслуг.ПустаяСсылка();
КонецФункции

#КонецОбласти



